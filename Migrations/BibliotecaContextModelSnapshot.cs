// <auto-generated />
using System;
using BIBLIOTECA.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BIBLIOTECA.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    partial class BibliotecaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BIBLIOTECA.Models.Bibliotecario", b =>
                {
                    b.Property<int>("id_bib")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("contraseña")
                        .IsRequired();

                    b.Property<string>("usuario")
                        .IsRequired();

                    b.HasKey("id_bib");

                    b.ToTable("bibliotecarios");
                });

            modelBuilder.Entity("BIBLIOTECA.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new { Id = 1, Nombre = "Sistemas" },
                        new { Id = 2, Nombre = "Arquitectura" },
                        new { Id = 3, Nombre = "Industrial" },
                        new { Id = 4, Nombre = "Matematica" }
                    );
                });

            modelBuilder.Entity("BIBLIOTECA.Models.Estudiante", b =>
                {
                    b.Property<int>("cod_est")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ape");

                    b.Property<string>("contraseña")
                        .IsRequired();

                    b.Property<string>("escuela");

                    b.Property<string>("nomb");

                    b.Property<string>("usuario")
                        .IsRequired();

                    b.HasKey("cod_est");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("BIBLIOTECA.Models.Libro", b =>
                {
                    b.Property<int>("cod_lib")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoriaId");

                    b.Property<string>("ISBN")
                        .IsRequired();

                    b.Property<string>("autor")
                        .IsRequired();

                    b.Property<int>("año_pub");

                    b.Property<string>("editorial")
                        .IsRequired();

                    b.Property<string>("titulo")
                        .IsRequired();

                    b.HasKey("cod_lib");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("BIBLIOTECA.Models.Prestamo", b =>
                {
                    b.Property<int>("cod_prest")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("datosEstudiantecod_est");

                    b.Property<int?>("datosLibrocod_lib");

                    b.Property<DateTime>("fecha_reserva");

                    b.Property<string>("modalidad")
                        .IsRequired();

                    b.HasKey("cod_prest");

                    b.HasIndex("datosEstudiantecod_est");

                    b.HasIndex("datosLibrocod_lib");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("BIBLIOTECA.Models.Libro", b =>
                {
                    b.HasOne("BIBLIOTECA.Models.Categoria", "Categoria")
                        .WithMany("Libros")
                        .HasForeignKey("CategoriaId");
                });

            modelBuilder.Entity("BIBLIOTECA.Models.Prestamo", b =>
                {
                    b.HasOne("BIBLIOTECA.Models.Estudiante", "datosEstudiante")
                        .WithMany()
                        .HasForeignKey("datosEstudiantecod_est");

                    b.HasOne("BIBLIOTECA.Models.Libro", "datosLibro")
                        .WithMany()
                        .HasForeignKey("datosLibrocod_lib");
                });
#pragma warning restore 612, 618
        }
    }
}
